!function(r){var t={};function e(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return r[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=r,e.c=t,e.d=function(r,t,n){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:n})},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var o in r)e.d(n,o,function(t){return r[t]}.bind(null,o));return n},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=0)}([function(r,t,e){"use strict";e.r(t);const n=Math.pow(2,-42),o=(r,t,e=1e-9)=>r===t||Math.abs(r-t)<e;var a={DEFAULT_TOLERANCE:1e-9,EPSILON:n,is:r=>"[object Number]"===toString.call(r)&&!isNaN(r),equal:o,sign:(r,t=1e-9)=>o(r,0,t)?0:Math.abs(r)/r,isInteger:(r,t=1e-9)=>o(Math.round(r),r,t),round:(r,t)=>{var e=Math.pow(10,t);return Math.round(r*e)/e},roundTo:(r,t)=>Math.round(r/t)*t,floorTo:(r,t)=>Math.floor(r/t)*t,ceilTo:(r,t)=>Math.ceil(r/t)*t,toFraction:function(r,t=n,e=1e3){let a=[1,0],u=[0,1],i=Math.floor(r),c=r-i;for(;u[0]<=e;){if(o(a[0]/u[0],r,t))return[a[0],u[0]];a=[i*a[0]+a[1],a[0]],u=[i*u[0]+u[1],u[0]],i=Math.floor(1/c),c=1/c-i}return[r,1]}};function u(r){return r.reduce((function(r,t){return r+t}),0)}function i(r){return s(r,1/c(r))}function c(r){return Math.sqrt(l(r,r))}function l(r,t){if(r.length!==t.length)throw TypeError("Vectors must be same dimension to perform dot product");return u(r.map((r,e)=>r*t[e]))}function f(r){return r.map(r=>-r)}function s(r,t){return r.map(r=>r*t)}function d(r,t,e=a.DEFAULT_TOLERANCE){return r.length===t.length&&r.every((r,n)=>a.equal(r,t[n],e))}function h(r,t,e=a.DEFAULT_TOLERANCE){return!(!a.equal(c(r),0,e)&&!a.equal(c(t),0,e))||d(r=i(r),t=i(t),e)}function m(r){var t=c(r),e=Math.atan2(r[1],r[0]);return e<0&&(e+=2*Math.PI),[t,e]}function p(r){var t=m(r);return[t[0],180*t[1]/Math.PI]}function g(r,t){let e,n;if(Array.isArray(r))e=r[1],n=r[0];else{if(void 0===t){let r="theta was not defined. Either supply a second argument to the";throw r+=" cartFromPolarRad function or make the first argument an array",TypeError(r)}e=t,n=r}return[n*Math.cos(e),n*Math.sin(e)]}function y(r,t){let e,n;if(Array.isArray(r))e=r[1],n=r[0];else{if(void 0===t){let r="theta was not defined. Either supply a second argument to the";throw r+=" cartFromPolarDeg function or make the first argument an array",TypeError(r)}e=t,n=r}return g(n,e*Math.PI/180)}function b(r,t){return Math.acos(l(r,t)/(c(r)*c(t)))}var v={ceilTo:function(r,t){if(Array.isArray(t)){if(t.length!==r.length)throw TypeError("dimension of increment vector must same as vec. Either change the dimension or just supply a number.");return r.map((r,e)=>a.ceilTo(r,t[e]))}return r.map(r=>a.ceilTo(r,t))},floorTo:function(r,t){if(Array.isArray(t)){if(t.length!==r.length)throw TypeError("dimension of increment vector must same as vec. Either change the dimension or just supply a number.");return r.map((r,e)=>a.floorTo(r,t[e]))}return r.map(r=>a.floorTo(r,t))},roundTo:function(r,t){if(Array.isArray(t)){if(t.length!==r.length)throw TypeError("dimension of increment vector must same as vec. Either change the dimension or just supply a number.");return r.map((r,e)=>a.roundTo(r,t[e]))}return r.map(r=>a.roundTo(r,t))},round:function(r,t){if(Array.isArray(t)){if(t.length!==r.length){let r="length of precision array must be same as vector you wish to";throw r+=" round. Either change the dimensions of the arrary or just supply a number.",TypeError(r)}return r.map((r,e)=>a.round(r,t[e]))}return r.map(r=>a.round(r,t))},projection:function(r,t){return s(t,l(r,t)/l(t,t))},angleDeg:function(r,t){return 180*b(r,t)/Math.PI},angleRad:b,rotateDeg:function(r,t){var e=p(r),n=e[1]+t;return y(e[0],n)},rotateRad:function(r,t){var e=m(r),n=e[1]+t;return g(e[0],n)},cartFromPolarDeg:y,cartFromPolarRad:g,polarDegFromCart:p,polarRadFromCart:m,collinear:function(r,t,e=a.DEFAULT_TOLERANCE){return h(r,t,e)||h(r,f(t),e)},codirectional:h,equal:d,scale:s,negate:f,subtract:function(r,t){if(r.length!==t.length)throw TypeError("vectors must be same dimension to subtract");return r.map((r,e)=>r-t[e])},add:function(...r){let t=r[0].length,e=Array.from({length:t},()=>0);return r.reduce((r,e)=>{if(e.length!==t)throw TypeError("vectors must be same dimension to add");return r.map((r,t)=>r+e[t])},e)},dot:l,length:c,normalize:i,is:function(r,t){return!!Array.isArray(r)&&((void 0===t||r.length===t)&&r.every(a.is))},arraySum:u};var T={compare:function(r,t,e=a.DEFAULT_TOLERANCE){if(r.length!==t.length)return r.length-t.length;for(var n=0;n<r.length;n++)if(!a.equal(r[n],t[n],e))return r[n]-t[n];return 0},reflectOverLine:function(r,t){var e=v.subtract(t[1],t[0]),n=v.subtract(r,t[0]),o=v.projection(n,e),a=v.subtract(v.scale(o,2),n);return v.add(t[0],a)},distanceToLine:function(r,t){var e=v.subtract(t[1],t[0]),n=v.subtract(r,t[0]),o=v.projection(n,e),a=v.subtract(o,n);return v.length(a)},distanceToPoint:function(r,t){return v.length(v.subtract(r,t))},rotateDeg:function(r,t,e){return void 0===e?v.rotateDeg(r,t):v.add(e,v.rotateDeg(v.subtract(r,e),t))},rotateRad:function(r,t,e){return void 0===e?v.rotateRad(r,t):v.add(e,v.rotateRad(v.subtract(r,e),t))},is:v.is,addVector:v.add,addVectors:v.add,subtractVector:v.subtract,equal:v.equal,polarRadFromCart:v.polarRadFromCart,polarDegFromCart:v.polarDegFromCart,cartFromPolarRad:v.cartFromPolarRad,cartFromPolarDeg:v.cartFromPolarDeg,round:v.round,roundTo:v.roundTo,floorTo:v.floorTo,ceilTo:v.ceilTo};function E(r){return(r[1][1]-r[0][1])/(r[1][0]-r[0][0])}var A={equal:function(r,t,e=1e-9){var n=v.subtract(r[1],r[0]),o=v.subtract(t[1],t[0]);if(!v.collinear(n,o,e))return!1;if(T.equal(r[0],t[0]))return!0;var a=v.subtract(t[0],r[0]);return v.collinear(n,a,e)},midpoint:function(r){return[(r[0][0]+r[1][0])/2,(r[0][1]+r[1][1])/2]},slope:E,intercepts:function(r){let t=E(r),e=r[1][1]-t*r[1][0];return[-e/t,e]},reflectPoint:function(r,t){return T.reflectOverLine(t,r)},distanceToPoint:function(r,t){return T.distanceToLine(t,r)}};var M={equal:function(r,t,e=1e-9){var n=v.subtract(r[1],r[0]),o=v.subtract(t[1],t[0]),a=T.equal(r[0],t[0]),u=v.codirectional(n,o,e);return a&&u}};t.default={number:a,vector:v,point:T,line:A,ray:M}}]);